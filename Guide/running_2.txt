### Creating a scene ###
Download Blender (https://www.blender.org/download/)
Open blender and delete objects in the default scene. (A (select all) > X (delete))
Import the example glTF scene. (File > Import > glTF 2.0 > select "natural-standing-sky.gltf")
Add objects to the imported scene (Add > Cylinder or something) (https://www.instructables.com/Beginners-Guide-to-Blender/)
Add a directional light to the scene. (Add > Light > Sun)
Set materials (https://www.youtube.com/watch?v=oFrX9OjFUko)
Join all mesh objects (Ctrl+J) (Compound-ray does not accept multiple meshes.)
Edit the UV map and bake colors to the texture. (https://brandonsdrawings.com/texture-baking/)
Select "insect-eye-spherical-projector_Orientation".
Set the path to the eye model. (Properties panel > Camera > Custom Properties > compound-structure)
Export the modified glTF scene. (File > Export > glTF 2.0) (include "Custom Properties" and "Cameras")



### Configuring input data ###
git clone https://github.com/JaneliaSciComp/CompoundRayTest.git
cd CompoundRayTest
python Functions/convertcsv.py -i path/to/input.csv -o path/to/output.eye
Move csv and new .eye file to InputData folder



### Changing Scene ###
Go to MetaTxt
Change which scene is used with path
Match csv/eye file input used by gltf with csvData and csvNeighbors



### Editing glTF ###
Go to Scenes/{scene name}.gltf
Find name of camera in glTF
Change "compound-structure" to change .eye file input



### Editing Scene Inputs ###
Go to Scenes/{scene name}.txt
Change video frames and movement to whatever
Match blenderFile to name of gltf
Match videoName to parent folder name



### Running ###
Once all inputs are configured run:
python Functions/general_compoundray.py
python Functions/data_extraction_test.py
python Functions/hr.py
python Functions/motion_detector.py
All results should be to folder OutputData

### Output ###

### Cylinderical Camera ###